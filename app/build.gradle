/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.5.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.0.1-jre'

    // cognito
    implementation group: 'software.amazon.awssdk', name: 'cognitoidentity', version: '2.25.56'
    implementation group: 'software.amazon.awssdk', name: 'cognitoidentityprovider', version: '2.25.56'

    // slf4j
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '2.0.13'
//    implementation group: 'org.slf4j', name: 'slf4j-simple', version: '2.0.13'
//    implementation group: 'org.slf4j', name: 'log4j-over-slf4j', version: '2.0.13'
    implementation 'org.slf4j:slf4j-log4j12:2.0.13'

    // lombok
    compileOnly 'org.projectlombok:lombok:1.18.32'
    annotationProcessor 'org.projectlombok:lombok:1.18.32'

    // MQTT
    implementation 'software.amazon.awssdk.iotdevicesdk:aws-iot-device-sdk:1.20.7'
}

application {
    // Define the main class for the application.
    mainClass = 'pl.grzeslowski.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
